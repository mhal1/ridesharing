{"version":3,"sources":["reportWebVitals.js","img_bg.png","RideReducer.js","RideStore.js","LoginComp.js","maybach.jpeg","ShowRideComp.js","mamg2.jpg","Bookings.js","GuardedRoutes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rides","ride","newRide","showRidesTable","showRide","showButtonBookRide","disableButtonAllRides","bookingId","showOfferRide","bookings","redirect","currentUser","sessionStorage","getItem","loginCard","booking","updateRides","state","action","type","updateStateRides","Object","assign","data","updateStateRide","updateStateShowRides","updateStateHideBookRideButton","updateStateDisableAllRideButton","updateStateUpdateBookingId","updateStateUpdateBookings","updateStateShowOfferRide","updateStateShowRide","updateStateResetShowRide","updateStateUpdateShowRide","updateStateCurrentUser","updateShowSignup","updateBookRideClick","updateCancelRideClick","updateBookingRide","store","createStore","SignUp","props","validateUserName","event","name","target","value","length","setState","usernameError","usernameValid","userName","validatePassword","password","passwordError","passwordValid","signUp","preventDefault","userDetails","axios","post","response","console","log","successMessage","errorMessage","setTimeout","dispatch","className","onSubmit","this","onChange","validateName","disabled","hidden","React","Component","LoginCheck","login","valid","setItem","get","response2","id","signup","to","onClick","LoginSignUp","subscribe","getState","style","fontSize","Login","width","height","display","alignItems","backgroundColor","backgroundImage","bg_img","opacity","justifyContent","RideList","showButtonCancelRide","borderRadius","map","seatsAvailable","ride_id","startPoint","endPoint","car","Ride","bookRide","cancelRide","delete","Number","color","Rides","padding","CarRegistration","nameError","nameValid","validateStartLocation","location","startError","startValid","validateDestination","destination","endError","endValid","validateCar","carError","carValid","validateSeats","seats","seatsError","seatsValid","register","rideToAdd","min","BookARide","NavBar","textDecoration","pointerEvents","ShowRide","maybach","backgroundSize","BookingTable","status","Bookings","mamg","GuardedRoute","component","rest","auth","render","ReactDOM","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.7bb9a4f1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/img_bg.123dae39.png\";","const initialState = {\n    rides: [],\n    ride: {},\n    newRide: {},\n    showRidesTable: false,\n    showRide: false,\n    showButtonBookRide: true,\n    disableButtonAllRides: false,\n    bookingId: 0,\n    showOfferRide: false,\n    bookings: [],\n    redirect: false,\n    currentUser: sessionStorage.getItem(\"currentUser\"),\n    loginCard: false,\n    booking:sessionStorage.getItem(\"bookings\")\n};\n\nfunction updateRides(state = initialState, action) {\n    switch (action.type) {\n        case 'UPDATE_RIDES' :\n            var updateStateRides = Object.assign({}, state, {rides: action.data.rides})\n            return updateStateRides;\n        case 'UPDATE_RIDE' :\n            var updateStateRide = Object.assign({}, state, {ride: action.data.ride})\n            return updateStateRide;\n        case 'ADD_RIDE' :\n            var updateStateAddRide = Object.assign({}, state, {\n                rides: action.data.rides,\n                redirect: action.data.redirect\n            })\n            return updateStateAddRide;\n        case 'UPDATE_REGISTRATION_REDIRECT' :\n            var updateStateAddRide = Object.assign({}, state, {\n                redirect: action.data.redirect\n            })\n            return updateStateAddRide;\n        case 'SHOW_RIDES_TABLE':\n            var updateStateShowRides = Object.assign({}, state, {showRidesTable: action.data.showRidesTable})\n            return updateStateShowRides;\n        case 'HIDE_BOOK_RIDE_BUTTON':\n            var updateStateHideBookRideButton = Object.assign({}, state, {showButtonBookRide: action.data.showButtonBookRide})\n            return updateStateHideBookRideButton;\n        case 'DISABLE_ALL_RIDE_BUTTON':\n            var updateStateDisableAllRideButton = Object.assign({}, state, {disableButtonAllRides: action.data.disableButtonAllRides})\n            return updateStateDisableAllRideButton;\n        case 'UPDATE_BOOKING_ID' :\n            var updateStateUpdateBookingId = Object.assign({}, state, {bookingId: action.data.bookingId})\n            return updateStateUpdateBookingId;\n        case 'UPDATE_BOOKINGS' :\n            var updateStateUpdateBookings = Object.assign({}, state, {bookings: action.data.bookings})\n            return updateStateUpdateBookings;\n        case 'SHOW_OFFER_RIDE' :\n            var updateStateShowOfferRide = Object.assign({}, state, {showOfferRide: action.data.showOfferRide})\n            return updateStateShowOfferRide;\n        case 'SHOW_RIDE' :\n            var updateStateShowRide = Object.assign({}, state, {showRide: action.data.showRide})\n            return updateStateShowRide;\n        case 'RESET_SHOW_RIDE' :\n            var updateStateResetShowRide = Object.assign({}, state, {\n                ride: {},\n                newRide: {},\n                showRidesTable: false,\n                showButtonBookRide: true,\n                disableButtonAllRides: false,\n                bookingId: 0,\n                showOfferRide: false,\n                showRide: false,\n                redirect: false\n            })\n            return updateStateResetShowRide;\n        case 'UPDATE_SHOW_RIDE' :\n            var updateStateUpdateShowRide = Object.assign({}, state, {\n                ride: {},\n                newRide: {},\n                showRidesTable: false,\n                showButtonBookRide: true,\n                disableButtonAllRides: false,\n                bookingId: 0,\n                showOfferRide: false,\n                showRide: false,\n                redirect: false\n            })\n            return updateStateUpdateShowRide;\n        case 'UPDATE_CURRENT_USER' :\n            var updateStateCurrentUser = Object.assign({}, state, {currentUser: action.data.currentUser})\n            return updateStateCurrentUser;\n        case 'SHOW_SIGNUP' :\n            var updateShowSignup = Object.assign({}, state, {loginCard: action.data.loginCard})\n            return updateShowSignup;\n        case 'BOOK_RIDE' :\n            var updateBookRideClick = Object.assign({}, state, {\n                ride: action.data.ride,\n                showButtonBookRide: action.data.showButtonBookRide,\n                showRidesTable: action.data.showRidesTable\n            })\n            return updateBookRideClick;\n        case 'CANCEL_RIDE' :\n            var updateCancelRideClick = Object.assign({}, state, {\n                showButtonBookRide: action.data.showButtonBookRide,\n                ride: action.data.ride,\n                disableButtonAllRides: action.data.disableButtonAllRides,\n                showRide: action.data.showRide\n            })\n            return updateCancelRideClick;\n        case 'BOOKING_COUNT' :\n            var updateBookingRide = Object.assign({}, state, {\n                booking: action.data.booking,\n            })\n            return updateBookingRide;\n        default:\n            return state;\n    }\n}\n\nexport default updateRides;\n","import {createStore} from \"redux\";\nimport updateRides from \"./RideReducer\";\n\nconst store = createStore(updateRides);\n\nexport default store;\n","import React from \"react\";\nimport bg_img from './img_bg.png';\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\nimport './ShowRide.css'\nimport store from \"./RideStore\";\n\nclass SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            userName: '',\n            password: '',\n            usernameError: '',\n            passwordError: '',\n            usernameValid: false,\n            passwordValid: false,\n            successMessage: '',\n            errorMessage: '',\n            redirect: false,\n            currentUser: ''\n        }\n    }\n\n    validateUserName = (event) => {\n        var name = event.target.value;\n        if (name.length < 1) {\n            this.setState({usernameError: 'Username is invalid', usernameValid: false})\n        } else {\n            this.setState({userName: name, usernameError: '', usernameValid: true})\n        }\n    }\n\n    validatePassword = (event) => {\n        var password = event.target.value;\n        if (password.length === 0) {\n            this.setState({passwordError: 'Password is invalid', passwordValid: false})\n        } else {\n            this.setState({password: password, passwordError: '', passwordValid: true})\n        }\n    }\n\n    signUp = (event) => {\n        event.preventDefault();\n        let userDetails = {\n            name: event.target[0].value,\n            userName: event.target[1].value,\n            password: event.target[2].value\n        }\n        axios\n            .post(\"http://localhost:8080/signup\", userDetails)\n            .then(response => {\n                console.log(response.data);\n                if (response.data != null) {\n                    this.setState({successMessage: 'Sign up Successful - redirecting now.', errorMessage: ''})\n                    setTimeout(() => {\n                        var action = {\n                            type: 'SHOW_SIGNUP',\n                            data: {\n                                loginCard: false\n                            }\n                        };\n                        store.dispatch(action);\n                        this.setState({loginCard: false})\n                    }, 1500)\n                } else {\n                    this.setState({errorMessage: 'Error - try again.', successMessage: ''})\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className='card-body'>\n                <div className=\"container-fluid\">\n                    <div>\n                        <form onSubmit={this.signUp}>\n                            <div className='mb-3'>\n                                <div className=\"row\">\n                                    Full Name:\n                                    <input className='form-control' onChange={this.validateName} type='text'/><br/>\n                                </div>\n                            </div>\n                            <div className='mb-3'>\n                                <div className=\"row\">\n                                    Create Username:\n                                    <input className='form-control' onChange={this.validateUserName} type='text'/><br/>\n                                </div>\n                            </div>\n                            <div className='mb-5'>\n                                <div className=\"row\">\n                                    Create Password:\n                                    <input className='form-control' onChange={this.validatePassword}\n                                           type='password'/><br/>\n                                </div>\n                            </div>\n                            <div className=\"text-center\">\n                                <button className=\"btn btn-primary btn-lg me-3\"\n                                        disabled={!(this.state.usernameValid && this.state.passwordValid)}\n                                        type=\"submit\"> Sign Up\n                                </button>\n                            </div>\n                            <div className=\"text-center\" hidden={this.state.successMessage === \"\"}>\n                                <button className=\"btn btn-success mt-4\">{this.state.successMessage}</button>\n                            </div>\n                            <div className=\"text-center\" hidden={this.state.errorMessage === \"\"}>\n                                <button className=\"btn btn-danger mt-4\">{this.state.errorMessage}</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginCheck extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            password: '',\n            usernameError: '',\n            passwordError: '',\n            usernameValid: false,\n            passwordValid: false,\n            successMessage: '',\n            errorMessage: '',\n            redirect: false\n        }\n    }\n\n    validateName = (event) => {\n        var name = event.target.value;\n        if (name.length < 1) {\n            console.log(\"Name is invalid\")\n            this.setState({usernameError: 'Username is invalid', usernameValid: false})\n        } else {\n            console.log(\"Name is valid\")\n            this.setState({userName: name, usernameError: '', usernameValid: true})\n        }\n    }\n\n    validatePassword = (event) => {\n        var password = event.target.value;\n        if (password.length === 0) {\n            this.setState({passwordError: 'Password is invalid', passwordValid: false})\n        } else {\n            this.setState({password: password, passwordError: '', passwordValid: true})\n        }\n    }\n\n    login = (event) => {\n        event.preventDefault();\n        console.log(event.target[1].value)\n        let userDetails = {\n            userName: event.target[0].value,\n            password: event.target[1].value\n        }\n        axios\n            .post(\"http://localhost:8080/login\", userDetails)\n            .then(response => {\n                console.log(response.data.valid);\n                if (response.data.valid === \"true\") {\n                    this.setState({successMessage: 'Login Successful - redirecting now.', errorMessage: ''})\n                    var action = {\n                        type: 'UPDATE_CURRENT_USER',\n                        data: {\n                            currentUser: userDetails.userName\n                        }\n                    };\n                    store.dispatch(action);\n                    sessionStorage.setItem(\"currentUser\", response.data.userName)\n                    axios.get(\"http://localhost:8080/bookings/\" + userDetails.userName) //url of API\n                        .then(response2 => {\n                            this.setState({\n                                bookings: response2.data\n                            })// get values and set\n                            var action = {\n                                type: 'UPDATE_BOOKINGS',\n                                data: {\n                                    bookings: response2.data\n                                }\n                            };\n                            store.dispatch(action);\n                            var action2 = {\n                                type: 'RESET_SHOW_RIDE',\n                                data: {}\n                            };\n                            store.dispatch(action2);\n                            console.log(response2.data.length)\n                            sessionStorage.setItem(\"bookings\", response2.data.length)\n                        })\n                    let currentUser = {\n                        id: response.data.id,\n                        name: response.data.name,\n                        userName: response.data.userName,\n                        password: response.data.password\n                    }\n                    axios\n                        .post(\"http://localhost:8080/create-current-user\", currentUser)\n                        .then(response2 => {\n                                console.log(response2)\n                                setTimeout(() => {\n                                    this.setState({redirect: true})\n                                }, 3000)\n                            }\n                        )\n                }\n                if (response.data.valid === \"false\") {\n                    this.setState({errorMessage: 'Login Denied - try again.', successMessage: ''})\n                }\n            })\n    }\n\n    signup = () => {\n        console.log(\"signup\")\n        //do with rudx\n        var action = {\n            type: 'SHOW_SIGNUP',\n            data: {\n                loginCard: true\n            }\n        };\n        store.dispatch(action);\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/show-rides'/>;\n        }\n        return (\n            <div className='card-body'>\n                <div className=\"container-fluid\">\n                    <div>\n                        <form onSubmit={this.login}>\n                            <div className='mb-3'>\n                                <div className=\"row\">\n                                    Username:\n                                    <input className='form-control' onChange={this.validateName} type='text'/><br/>\n                                </div>\n                            </div>\n                            <div className='mb-5'>\n                                <div className=\"row\">\n                                    Password:\n                                    <input className='form-control' onChange={this.validatePassword}\n                                           type='password'/><br/>\n                                </div>\n                            </div>\n                            <div className=\"text-center\">\n                                <button className=\"btn btn-primary btn-lg me-3\"\n                                        disabled={!(this.state.usernameValid && this.state.passwordValid)}\n                                        type=\"submit\">Login\n                                </button>\n                                <button onClick={this.signup} className=\"btn btn-secondary btn-lg\" type=\"button\">Sign up\n                                </button>\n                            </div>\n                            <div className=\"text-center\" hidden={this.state.successMessage === \"\"}>\n                                <button className=\"btn btn-success mt-4\">{this.state.successMessage}</button>\n                            </div>\n                            <div className=\"text-center\" hidden={this.state.errorMessage === \"\"}>\n                                <button className=\"btn btn-danger mt-4\">{this.state.errorMessage}</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginSignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginCard: false\n        }\n    }\n\n    render() {\n        store.subscribe(() => this.setState({loginCard: store.getState().loginCard}))\n        return (\n            <div className='d-flex justify-content-center align-items-center'>\n                <div className='card' hidden={this.state.loginCard}>\n                    <div className='card-header bg-primary text-white mb-4' style={{fontSize: '30px'}}>\n                        Login\n                    </div>\n                    {<LoginCheck/>}\n                </div>\n                <div className='card' hidden={!this.state.loginCard}>\n                    <div className='card-header bg-primary text-white mb-4' style={{fontSize: '30px'}}>\n                        Sign Up\n                    </div>\n                    {<SignUp/>}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction Login() {\n    return (\n        <div id=\"page-container\">\n            <div id=\"content-wrap\">\n                <div className='container-fluid'>\n                    <div className='row'>\n                        <div className='text-white' style={{\n                            width: '100vw',\n                            height: '13vh',\n                            display: 'flex',\n                            alignItems: 'center',\n                            backgroundColor: 'black'\n                        }}>\n                            <h1>RideSharing</h1>\n                        </div>\n                    </div>\n                    <div className='row' style={{backgroundImage: `url(${bg_img})`, width: '100vw', height: '81vh'}}>\n                        <div className='text-white' style={{\n                            height: '10vh',\n                            backgroundColor: 'black',\n                            opacity: '0.8',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center'\n                        }}>\n                            <h5>Take your next trip together.</h5>\n                        </div>\n                        <div className='row'>\n                            <LoginSignUp/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer id=\"footer\">\n                <div className='text-white d-flex justify-content-around align-items-center' style={{\n                    height: '6vh',\n                    backgroundColor: 'black'\n                }}>\n                    <span>Terms & Conditions</span>\n                    <span>Copyright © MHG Limited</span>\n                    <span>Contact us</span>\n                </div>\n            </footer>\n        </div>\n\n    );\n}\n\nexport default Login;","export default __webpack_public_path__ + \"static/media/maybach.0acf4d2c.jpeg\";","import React from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport store from \"./RideStore\";\nimport './ShowRide.css'\nimport maybach from \"./maybach.jpeg\"\n\nclass RideList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rides: [],\n            ride: {},\n            showRidesTable: false,\n            showRide: false,\n            showButtonBookRide: true,\n            showButtonCancelRide: false,\n            disableButtonAllRides: true\n        }\n    }\n\n    // want the fecth of details from backend to happen as soon as component loads\n    componentDidMount() {\n        //get request using axios\n        axios.get(\"http://localhost:8080/rides\") //url of API\n            .then(response => {\n                this.setState({\n                    rides: response.data\n                })// get values and set\n                var action = {\n                    type: 'UPDATE_RIDES',\n                    data: {\n                        rides: response.data\n                    }\n                };\n                store.dispatch(action);\n            })\n    }\n\n    render() {\n        store.subscribe(() => this.setState({rides: store.getState().rides}))\n        return (\n            <div>\n                <div className=\"card-header text-center bg-light\">\n                    Please select a ride below!\n                </div>\n                <table className='table table-borderless table-hover table-dark text-white'\n                       style={{borderRadius: '10px'}}>\n                    <thead className=\"thead-light\">\n                    <tr className=\"text-center\">\n                        <th>Start Point</th>\n                        <th>End Point</th>\n                        <th>Seats Available</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.rides.map(ride => {\n                        return (\n                            <tr hidden={ride.seatsAvailable === 0} key={ride.id} onClick={() => {\n                                var action = {\n                                    type: 'UPDATE_RIDE',\n                                    data: {\n                                        ride: {\n                                            ride_id: ride.id,\n                                            name: ride.name,\n                                            startPoint: ride.startPoint,\n                                            endPoint: ride.endPoint,\n                                            car: ride.car,\n                                            seatsAvailable: ride.seatsAvailable\n                                        }\n                                    }\n                                };\n                                store.dispatch(action);\n                                var action3 = {\n                                    type: 'SHOW_RIDE',\n                                    data: {\n                                        showRide: true\n                                    }\n                                };\n                                store.dispatch(action3);\n                            }} className=\"text-center\">\n                                <td data-title=\"StartPoint\">{ride.startPoint}</td>\n                                <td data-title=\"EndPoint\">{ride.endPoint}</td>\n                                <td data-title=\"Seats\">{ride.seatsAvailable}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <br/>\n            </div>\n        )\n    }\n}\n\nclass Ride extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ride: {\n                ride_id: 0,\n                name: '',\n                startPoint: '',\n                endPoint: '',\n                car: '',\n                seatsAvailable: 0\n            },\n            bookingId: 0,\n            successMessage: '',\n            showButtonBookRide: true,\n            booking:sessionStorage.getItem(\"bookings\")\n        }\n    }\n\n    bookRide = () => {\n        console.log(\"book ride\")\n        store.subscribe(() => this.setState({\n            ride: store.getState().ride,\n            showButtonBookRide: store.getState().showButtonBookRide,\n            bookingId: store.getState().bookingId,\n            booking: sessionStorage.getItem(\"booking\")\n        }))\n        var action = {\n            type: 'BOOK_RIDE',\n            data: {\n                ride: {\n                    ride_id: this.state.ride.ride_id,\n                    name: this.state.ride.name,\n                    startPoint: this.state.ride.startPoint,\n                    endPoint: this.state.ride.endPoint,\n                    car: this.state.ride.car,\n                    seatsAvailable: this.state.ride.seatsAvailable - 1\n                },\n                showButtonBookRide: false,\n                showRidesTable: false\n\n            }\n        };\n        store.dispatch(action);\n\n        var ride_id = this.state.ride.ride_id\n        var name = this.state.ride.name\n        var startPoint = this.state.ride.startPoint\n        var endPoint = this.state.ride.endPoint\n        var car = this.state.ride.car\n        var seatsAvailable = this.state.ride.seatsAvailable\n        var currentUser = sessionStorage.getItem(\"currentUser\")\n        let ride = {\n            \"ride\": {\n                \"id\": ride_id,\n                \"name\": name,\n                \"startPoint\": startPoint,\n                \"endPoint\": endPoint,\n                \"car\": car,\n                \"seatsAvailable\": seatsAvailable\n            },\n            \"user\": currentUser,\n            \"status\": \"Booked\"\n        }\n        axios\n            .post(\"http://localhost:8080/book_ride\", ride)\n            .then(response => {\n                if (response.data != null) {\n                    this.successMessage = \"Booking success with Booking ID: \" + response.data.id\n                    this.setState({successMessage: \"Booking success with Booking ID: \" + response.data.id})\n                }\n                sessionStorage.setItem(\"bookingId\",response.data.id)\n            })\n    }\n\n    cancelRide = () => {\n        this.setState({\n            showButtonBookRide: store.getState().showButtonBookRide,\n            booking:sessionStorage.getItem(\"bookings\")\n        })\n        var action = {\n            type: 'CANCEL_RIDE',\n            data: {\n                showButtonBookRide: true,\n                ride: {\n                    ride_id: this.state.ride.ride_id,\n                    name: this.state.ride.name,\n                    startPoint: this.state.ride.startPoint,\n                    endPoint: this.state.ride.endPoint,\n                    car: this.state.ride.car,\n                    seatsAvailable: this.state.ride.seatsAvailable + 1\n                },\n                disableButtonAllRides: false,\n                showRide: false\n            }\n        };\n        store.dispatch(action);\n\n        var bookingId = sessionStorage.getItem(\"bookingId\");\n        axios\n            .delete(\"http://localhost:8080/delete_booking/\" + bookingId)\n            .then(response => {\n                console.log(\"Deleted:\" + bookingId);\n                this.setState({booking: Number(this.state.booking)-1})\n            })\n    }\n\n    render() {\n        console.log(\"Book ride render \")\n        store.subscribe(() => this.setState({\n            ride: store.getState().ride,\n            rides: store.getState().rides,\n            booking:store.getState().bookings\n        }))\n        return (\n            <div>\n                <div className=\"card text-center bg-success mb-3\" hidden={this.state.showButtonBookRide}\n                     style={{color: 'black'}}>\n                    {this.successMessage}\n                </div>\n                <div className=\"card-header text-center bg-light\">\n                    Ride Details\n                </div>\n                <table className='table table-borderless table-dark'\n                       style={{borderRadius: '0px 0px 10px 10px', backgroundColor: 'darkgrey'}}>\n                    <thead className=\"thead-light\">\n                    <tr className=\"text-center\">\n                        <th>Name</th>\n                        <th>Start Point</th>\n                        <th>End Point</th>\n                        <th>Car</th>\n                        <th>Seats Available</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr className=\"text-center\">\n                        <td>{this.state.ride.name}</td>\n                        <td>{this.state.ride.startPoint}</td>\n                        <td>{this.state.ride.endPoint}</td>\n                        <td>{this.state.ride.car}</td>\n                        <td>{this.state.ride.seatsAvailable}</td>\n                    </tr>\n                    </tbody>\n                </table>\n                <div className=\"container-fluid\">\n                    <div className=\"text-center\" hidden={!this.state.showButtonBookRide}>\n                        <button onClick={this.bookRide} className=\"btn btn-light btn-lg mb-3\">Book\n                            Ride\n                        </button>\n                    </div>\n                    <div className=\"text-center\" hidden={this.state.showButtonBookRide}>\n                        <Link to='/bookings' className=\"btn btn-light btn-lg me-3\">Go to bookings <span>&#8594;</span>\n                        </Link>\n                        <button onClick={this.cancelRide} className=\"btn btn-danger btn-lg\">Cancel\n                            Ride\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Rides extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rides: [],\n            ride: {},\n            showRidesTable: false,\n            showRide: false,\n            showButtonBookRide: true,\n            showButtonCancelRide: false,\n            disableButtonAllRides: false\n        }\n    }\n\n    render() {\n        store.subscribe(() => this.setState(store.getState()))\n        return (\n            <div>\n                <div className='text-white'>\n                    <p hidden={this.state.disableButtonAllRides}\n                       style={{backgroundColor: 'black', padding: '1px 10px 1px 10px', fontSize: '20px'}}>\n                        RideSharing is an online app which allows you to book rides to your chosen\n                        destination or offer rides using your vehicle!\n                    </p>\n                </div>\n                <div className='text-center mb-3' hidden={this.state.disableButtonAllRides}>\n                    <button onClick={() => {\n                        var action = {\n                            type: 'SHOW_RIDES_TABLE',\n                            data: {\n                                showRidesTable: true\n                            }\n                        };\n                        store.dispatch(action);\n                        var action2 = {\n                            type: 'DISABLE_ALL_RIDE_BUTTON',\n                            data: {\n                                disableButtonAllRides: true\n                            }\n                        };\n                        store.dispatch(action2);\n                    }} className=\"btn btn-lg btn-light me-4\"> Show all\n                        rides <span>&#8594;</span>\n                    </button>\n                    <button onClick={() => {\n                        var action = {\n                            type: 'SHOW_OFFER_RIDE',\n                            data: {\n                                showOfferRide: true\n                            }\n                        };\n                        store.dispatch(action);\n                    }} className=\"btn btn-lg btn-light\" hidden={this.state.disableButtonAllRides}> Offer a\n                        ride <span>&#8594;</span>\n                    </button>\n                </div>\n                <div hidden={!this.state.showRidesTable}>\n                    <RideList/>\n                </div>\n                <div hidden={!this.state.showRide}>\n                    <Ride/>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass CarRegistration extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRide: {\n                name: '',\n                startPoint: '',\n                endPoint: '',\n                car: '',\n                seatsAvailable: 0\n            },\n            nameError: '',\n            startError: '',\n            endError: '',\n            carError: '',\n            seatsError: '',\n            nameValid: false,\n            startValid: false,\n            endValid: false,\n            carValid: false,\n            redirect: false,\n            successMessage: ''\n        }\n    }\n\n    validateName = (event) => {\n        var name = event.target.value;\n        if (name.length < 1) {\n            this.setState({nameError: 'Please enter your name', nameValid: false})\n        } else {\n            this.setState({...this.state, newRide: {...this.state.newRide, name: name}, nameError: '', nameValid: true})\n        }\n    }\n\n    validateStartLocation = (event) => {\n        var location = event.target.value;\n        if (location.length < 1) {\n            this.setState({startError: 'Please enter the start location', startValid: false})\n        } else {\n            this.setState({\n                ...this.state,\n                newRide: {...this.state.newRide, startPoint: location},\n                startError: '',\n                startValid: true\n            })\n        }\n    }\n\n    validateDestination = (event) => {\n        var destination = event.target.value;\n        if (destination.length < 1) {\n            this.setState({endError: 'Please enter the destination', endValid: false})\n        } else {\n            this.setState({\n                ...this.state,\n                newRide: {...this.state.newRide, endPoint: destination},\n                endError: '',\n                endValid: true\n            })\n        }\n    }\n\n    validateCar = (event) => {\n        var car = event.target.value;\n        if (car.length < 1) {\n            this.setState({carError: 'Car is invalid', carValid: false})\n        } else {\n            this.setState({...this.state, newRide: {...this.state.newRide, car: car}, carError: '', carValid: true})\n        }\n    }\n\n    validateSeats = (event) => {\n        var seats = Number(event.target.value);\n        if (seats < 1) {\n            this.setState({seatsError: 'Number of seats must be greater than 0', seatsValid: false})\n        } else {\n            this.setState({\n                ...this.state,\n                newRide: {...this.state.newRide, seatsAvailable: seats},\n                seatsError: '',\n                seatsValid: true\n            })\n        }\n    }\n\n    register = (event) => {\n        event.preventDefault();\n        var rideToAdd = this.state.newRide;\n        axios\n            .post(\"http://localhost:8080/create_ride/\", rideToAdd)\n            .then(response => {\n                this.setState({successMessage: 'Registration was successful', redirect: true})\n                var action = {\n                    type: 'ADD_RIDE',\n                    data: {\n                        rides: [...store.getState().rides, response.data],\n                        redirect: true\n                    }\n                };\n                store.dispatch(action);\n            });\n    }\n\n    render() {\n        store.subscribe(() => this.setState({redirect: store.getState().redirect}))\n        return (\n            <div>\n                <form onSubmit={this.register} hidden={this.state.redirect === true} className=\"text-white\">\n                    <div>\n                        <label><strong>Name</strong></label>\n                        <input className=\"form-control\" type=\"text\"\n                               onChange={this.validateName}/><span>{this.state.nameError}</span><br/>\n                    </div>\n                    <div>\n                        <label><strong>Start Location</strong></label>\n                        <input type=\"text\" className=\"form-control\"\n                               onChange={this.validateStartLocation}/><span>{this.state.startError}</span><br/>\n                    </div>\n                    <div>\n                        <label><strong>Destination</strong></label>\n                        <input type=\"text\" className=\"form-control\"\n                               onChange={this.validateDestination}/><span>{this.state.endError}</span><br/>\n                    </div>\n                    <div>\n                        <label><strong>Car</strong></label>\n                        <input type=\"text\" className=\"form-control\"\n                               onChange={this.validateCar}/><span>{this.state.carError}</span><br/>\n                    </div>\n                    <div>\n                        <label><strong>Seats Available</strong></label>\n                        <input type=\"Number\" min=\"1\" className=\"form-control\"\n                               onChange={this.validateSeats}/><span>{this.state.seatsError}</span><br/>\n                    </div>\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-primary me-3\"\n                                disabled={!(this.state.seatsValid && this.state.nameValid && this.state.startValid && this.state.endValid && this.state.carValid)}\n                                type=\"submit\"> Submit\n                        </button>\n                        <button className=\"btn btn-warning\" onClick={() => {\n                            var action = {\n                                type: 'SHOW_OFFER_RIDE',\n                                data: {\n                                    showOfferRide: false\n                                }\n                            };\n                            store.dispatch(action);\n                            var action2 = {\n                                type: 'UPDATE_SHOW_RIDE',\n                                data: {}\n                            };\n                            store.dispatch(action2);\n                        }} type=\"button\"> Back\n                        </button>\n                    </div>\n                </form>\n                <div className=\"text-center\" hidden={this.state.redirect === false}>\n                    <h4 className=\"text-white\">{this.state.successMessage}</h4>\n                    <button className=\"btn btn-warning\" onClick={() => {\n                        var action = {\n                            type: 'SHOW_OFFER_RIDE',\n                            data: {\n                                showOfferRide: false\n                            }\n                        };\n                        store.dispatch(action);\n                        var action2 = {\n                            type: 'UPDATE_SHOW_RIDE',\n                            data: {}\n                        };\n                        store.dispatch(action2);\n                        var action3 = {\n                            type: 'UPDATE_REGISTRATION_REDIRECT',\n                            data: {\n                                redirect: false\n                            }\n                        };\n                        store.dispatch(action3);\n                    }} type=\"button\"> Back to rides\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass BookARide extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showOfferRide: false\n        }\n    }\n\n    render() {\n        store.subscribe(() => this.setState(store.getState()))\n        return (\n            <div>\n                <div hidden={this.state.showOfferRide}>\n                    <Rides/>\n                </div>\n                <div className='card bg-dark' hidden={!this.state.showOfferRide}>\n                    <div className='card-header text-white'>\n                        <h2> Car Ride Registration Form </h2>\n                    </div>\n                    <div className='card-body'>\n                        <div className='container'>\n                            <CarRegistration/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: sessionStorage.getItem(\"bookings\"),\n            currentUser: sessionStorage.getItem(\"currentUser\")\n        }\n    }\n\n    render() {\n        console.log(\"navbar render\")\n        store.subscribe(() => this.setState({booking:store.getState().bookings}))\n        return (\n            <div className='text-white d-flex bd-highlight' style={{\n                width: '100vw',\n                height: '13vh',\n                display: 'flex',\n                alignItems: 'center',\n                backgroundColor: 'black'\n            }}>\n                <h1 className=\"me-auto p-3 bd-highlight\">RideSharing</h1>\n                <Link type=\"button\" style={{color: 'white', fontSize: '20px', textDecoration: 'none'}}\n                      className=\"pe-5 ps-5 bd-highlight position-relative\" to='/bookings'>My Bookings <span\n                    className=\"position-absolute top-0 start-70 translate-middle badge rounded-pill bg-danger\"\n                    hidden={this.state.bookings.length == 0} style={{color: 'white', fontSize: '10px', textDecoration: 'none'}}>{this.state.bookings}</span></Link>\n                <Link type=\"button\"\n                    className=\"pe-3 ps-2 bd-highlight position-relative\" style={{\n                    color: 'white',\n                    fontSize: '20px',\n                    textDecoration: 'none',\n                    pointerEvents: 'none'\n                }}> {this.state.currentUser}<span id=\"myDIV\"\n                    className=\"position-absolute top-50 start-0 translate-middle p-1 rounded-circle\"></span></Link>\n\n                <Link style={{color: 'white', fontSize: '20px', textDecoration: 'none'}}\n                      className=\"ps-4 pe-4 bd-highlight\" to='/login'>Logout</Link>\n            </div>\n        )\n    }\n\n}\n\nfunction ShowRide() {\n    return (\n        <div id=\"page-container\">\n            <div id=\"content-wrap\">\n                <div className='container-fluid'>\n                    <div className='row'>\n                        <NavBar/>\n                    </div>\n                    <div className='row' style={{\n                        backgroundImage: `url(${maybach})`,\n                        backgroundSize: 'cover',\n                        width: '100vw',\n                        height: '81vh'\n                    }}>\n                        <div className='row'>\n                            <div\n                                className='d-flex justify-content-center align-items-center'>\n                                <BookARide/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer id=\"footer\">\n                <div className='text-white d-flex justify-content-around align-items-center' style={{\n                    height: '6vh',\n                    backgroundColor: 'black'\n                }}>\n                    <span>Terms & Conditions</span>\n                    <span>Copyright © MHG Limited</span>\n                    <span>Contact us</span>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default ShowRide;","export default __webpack_public_path__ + \"static/media/mamg2.672ab6d2.jpg\";","import React from \"react\";\nimport axios from \"axios\";\nimport store from \"./RideStore\";\nimport {Link} from \"react-router-dom\";\nimport './ShowRide.css'\nimport mamg from './mamg2.jpg'\n\nclass BookingTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: []\n        }\n    }\n\n    // want the fecth of details from backend to happen as soon as component loads\n    componentDidMount() {\n        //get request using axios\n        var currentUser = sessionStorage.getItem(\"currentUser\")\n        axios.get(\"http://localhost:8080/bookings/\" + currentUser) //url of API\n            .then(response => {\n                this.setState({\n                    bookings: response.data\n                })// get values and set\n                var action = {\n                    type: 'UPDATE_BOOKINGS',\n                    data: {\n                        bookings: response.data\n                    }\n                };\n                store.dispatch(action);\n\n                var action2 = {\n                    type: 'RESET_SHOW_RIDE',\n                    data: {}\n                };\n                store.dispatch(action2);\n                sessionStorage.setItem(\"bookings\",response.data.length)\n            })\n    }\n\n    render() {\n        store.subscribe(() => this.setState({bookings: store.getState().bookings}))\n        return (\n            <div>\n                <table className='table table-sm table-borderless' hidden={this.state.bookings.length === 0} style={{color:'white',borderRadius:'8px',backgroundColor: 'rgba(90,90, 90, 0.93)'}}>\n                    <thead className=\"thead\">\n                    <tr className=\"text-center\">\n                        <th>Booking ID</th>\n                        <th>Ride ID</th>\n                        <th>Driver Name</th>\n                        <th>Start Point</th>\n                        <th>End Point</th>\n                        <th>Car</th>\n                        <th>Seats Available</th>\n                        <th>Status</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.bookings.map(booking => {\n                        return (\n                            <tr key={booking.id} className=\"text-center\">\n                                <td>{booking.id}</td>\n                                <td>{booking.ride.id}</td>\n                                <td>{booking.ride.name}</td>\n                                <td>{booking.ride.startPoint}</td>\n                                <td>{booking.ride.endPoint}</td>\n                                <td>{booking.ride.car}</td>\n                                <td>{booking.ride.seatsAvailable}</td>\n                                <td>{booking.status}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <div className=\"text-center mt-4\" hidden={this.state.bookings.length > 0}>\n                    <h1 style={{color: 'white'}}> You have no bookings </h1>\n                    <Link className=\"btn btn-primary mt-3\" to='/show-rides'>Check out rides <span>&#8594;</span></Link>\n                </div>\n                <br/>\n            </div>\n        )\n    }\n}\n\nfunction Bookings() {\n    return (\n        <div id=\"page-container\">\n            <div id=\"content-wrap\">\n                <div className='container-fluid'>\n                    <div className='row'>\n                        <div className='text-white d-flex bd-highlight' style={{\n                            width: '100vw',\n                            height: '13vh',\n                            display: 'flex',\n                            alignItems: 'center',\n                            backgroundColor: 'black'\n                        }}>\n                            <h1 className=\"me-auto p-3 bd-highlight\">RideSharing</h1>\n                            <Link style={{color: 'white', fontSize: '20px', textDecoration: 'none'}}\n                                  className=\"pe-5 bd-highlight\" to='/show-rides'>Home</Link>\n                            <Link type=\"button\"\n                                  className=\"pe-3 ps-2 bd-highlight position-relative\" style={{\n                                color: 'white',\n                                fontSize: '20px',\n                                textDecoration: 'none',\n                                pointerEvents: 'none'\n                            }}> {sessionStorage.getItem(\"currentUser\")}<span id=\"myDIV\"\n                                                              className=\"position-absolute top-50 start-0 translate-middle p-1 rounded-circle\"></span></Link>\n                            <Link style={{color: 'white', fontSize: '20px', textDecoration: 'none'}}\n                                  className=\"p-4 bd-highlight\" to='/login'>Logout</Link>\n                        </div>\n                    </div>\n                    <div className='row' style={{backgroundImage: `url(${mamg})`, backgroundSize: 'cover',width: '100vw', height: '81vh'}}>\n                        <div className='text-white' style={{\n                            height: '10vh',\n                            backgroundColor: 'black',\n                            opacity: '0.8',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center'\n                        }}>\n                            <h5>My Bookings</h5>\n                        </div>\n                        <div className='row col-10 offset-1'>\n                            <div className='table-responsive'>\n                                {<BookingTable/>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer id=\"footer\">\n                <div className='text-white d-flex justify-content-around align-items-center' style={{\n                    height: '6vh',\n                    backgroundColor: 'black'\n                }}>\n                    <span>Terms & Conditions</span>\n                    <span>Copyright © MHG Limited</span>\n                    <span>Contact us</span>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default Bookings;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport store from \"./RideStore\";\n\nconst GuardedRoute = ({ component: Component, auth, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        store.getState().currentUser !== ''\n            ? <Component {...props} />\n            : <Redirect to='/login' />\n    )} />\n)\n\nexport default GuardedRoute;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Login from \"./LoginComp\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport ShowRide from \"./ShowRideComp\";\nimport Bookings from \"./Bookings\";\nimport GuardedRoute from \"./GuardedRoutes\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <div>\n                <Switch> {/* only match path*/}\n                    <Route exact path=\"/\" render={() => <Redirect to={\"/login\"}/>}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <GuardedRoute path='/show-rides' component={ShowRide}/>\n                    <GuardedRoute exact path=\"/show-rides\" component={ShowRide}/>\n                    <GuardedRoute exact path=\"/bookings\" component={Bookings}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}